/*
 * Please do not edit this file.
 * It was generated using PAB's VML system.
 */

#ifndef _HDCG_ARG_H_RPCGEN
#define _HDCG_ARG_H_RPCGEN

#include <config.h>
#include <util/vml/types.h>
#include <util/vml/vml.h>
#include <util/enum.h>
#include <util/defines.h>
CPS_START_NAMESPACE

enum HDCGcontrol {
	HdcgGenerateSubspace = 0,
	HdcgReuseLdop = 1,
	HdcgRecomputeLdop = 2,
	HdcgRefineSubspace = 3,
	HdcgEvlRefineSubspace = 4
};
typedef enum HDCGcontrol HDCGcontrol;
extern struct vml_enum_map HDCGcontrol_map[];

class VML;
class HdcgArg {
public:
	 bool Encode(char *filename,char *instance);
	 bool Decode(char *filename,char *instance);
	 bool Vml(VML *vmls,char *instance);
	HDCGcontrol Control;
	int NumberSubspace;
	int Ls;
	int Block[5];
	int SubspaceRationalRefine;
	double SubspaceRationalRefineLo;
	double SubspaceRationalRefineResidual;
	int SubspaceRationalLs;
	double SubspaceRationalLo;
	double SubspaceRationalMass;
	double SubspaceRationalResidual;
	int SubspaceSurfaceDepth;
	double LittleDopSolverResidualInner;
	double LittleDopSolverResidualVstart;
	double LittleDopSolverResidualSubspace;
	int LittleDopSubspaceRational;
	int LittleDopSolverIterMax;
	int LdopDeflVecs;
	double PreconditionerKrylovResidual;
	int PreconditionerKrylovIterMax;
	double PreconditionerKrylovShift;
	double PcgSingleShift;
	int LittleDopSolver;
	int Flexible;
};

/* the xdr functions */

#ifdef __cplusplus
extern "C" {
#endif

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t vml_HDCGcontrol (VML *, char *instance, HDCGcontrol*);
extern  bool_t vml_HdcgArg (VML *, char *instance, HdcgArg*);

#else /* K&R C */
extern  bool_t vml_HDCGcontrol (VML *, char *instance, HDCGcontrol*);
extern  bool_t vml_HdcgArg (VML *, char *instance, HdcgArg*);

#endif /* K&R C */

#ifdef __cplusplus
}
#endif
CPS_END_NAMESPACE

#endif /* !_HDCG_ARG_H_RPCGEN */
